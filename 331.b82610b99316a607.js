"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[331],{7331:(c,m,e)=>{e.r(m),e.d(m,{default:()=>x});var r=e(2223),o=e(9401),a=e(6273),l=e(8541),d=e(9142),p=e(3597),u=e(2696);function f(n,F){if(1&n&&(r.ynx(0),r.TgZ(1,"form",2)(2,"label"),r._uU(3," Name: "),r._UZ(4,"input",3),r.qZA(),r.TgZ(5,"div",4)(6,"div",5),r._uU(7,"Name is required"),r.qZA()()(),r.BQk()),2&n){const s=r.oxw();r.xp6(1),r.Q6J("formGroup",s.form)}}const g=e(3914).Z;let v=(()=>{class n{constructor(){this.fb=(0,r.f3M)(o.qu),this.form=this.fb.group({name:this.fb.control("",{validators:[o.kI.required]})}),this.snippets={form:[{fileName:"app.component.ts",content:g,language:"typescript"}]}}static#r=this.\u0275fac=function(t){return new(t||n)};static#e=this.\u0275cmp=r.Xpm({type:n,selectors:[["ngs-reactive-forms-demo"]],standalone:!0,features:[r.jDz],decls:2,vars:1,consts:[["title","Reactive Form",3,"snippets"],[4,"ngsSnippetResult"],[3,"formGroup"],["formControlName","name"],["ngxErrors","name"],["ngxError","required"]],template:function(t,i){1&t&&(r.TgZ(0,"ngs-code-snippets",0),r.YNc(1,f,8,1,"ng-container",1),r.qZA()),2&t&&r.Q6J("snippets",i.snippets.form)},dependencies:[o.UX,o._Y,o.Fj,o.JJ,o.JL,o.sg,o.u,a.rM,a.I6,l.G,d.$,p.u,u.A],styles:["[ngxerror][_ngcontent-%COMP%]{color:red}"],changeDetection:0})}return n})();var h=e(8034);const x=[{path:"",component:(()=>{class n{static#r=this.\u0275fac=function(t){return new(t||n)};static#e=this.\u0275cmp=r.Xpm({type:n,selectors:[["ngs-ngx-errors-demo"]],standalone:!0,features:[r.jDz],decls:2,vars:0,template:function(t,i){1&t&&(r.TgZ(0,"ngs-demo-main-content"),r._UZ(1,"ngs-reactive-forms-demo"),r.qZA())},dependencies:[h._,v],encapsulation:2,changeDetection:0})}return n})()},{path:"",redirectTo:"",pathMatch:"full"}]},3914:(c,m,e)=>{e.d(m,{Z:()=>r});const r="import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\r\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\r\n\r\nimport { NgxErrorsModule } from '@ngspot/ngx-errors';\r\n\r\n@Component({\r\n  selector: 'ngs-reactive-forms-demo',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule, NgxErrorsModule],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [\r\n    `\r\n      [ngxerror] {\r\n        color: red;\r\n      }\r\n    `,\r\n  ],\r\n  template: `\r\n    <form [formGroup]=\"form\">\r\n      <label>\r\n        First Name:\r\n        <input formControlName=\"name\" />\r\n      </label>\r\n\r\n      <div ngxErrors=\"name\">\r\n        <div ngxError=\"required\">Name is required</div>\r\n      </div>\r\n    </form>\r\n  `,\r\n})\r\nexport class ReactiveFormsDemoComponent {\r\n  private fb = inject(FormBuilder);\r\n\r\n  form = this.fb.group({\r\n    name: this.fb.control('', { validators: [Validators.required] }),\r\n  });\r\n}\r\n"}}]);